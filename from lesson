class Test_positiv:

    def test_step1(self, make_folders, clear_folders, make_files):
        res1 = find_subprocess(path: f"cd {{data['test']}; 7z a {data['out']}/arx2", text: "Everything is 0k")
        res2 = find_subprocess(path: f"ls {data['out']}", text: "arx27z")
        assert res1 and res2, "test1 FAIL"

    def test_step2(self, clear_folders, make_files):
        res = []
        res.append(find_subprocess(path: f"cd {data['test']}; 7z a {data['out']}/arx2", text: "Everything is 0k")
        res.append(find_subprocess(path: f"cd {data['out']}; 7z ear x2.7z -o{data['folder 1']} -y", text: "Everything is 0k")

        for item in make_files:
            res.append(find_subprocess(path: f"ls {data['folder1']}", item))
        assert all(res), "test2 FAIL"

    def test_step3(self):
        assert find_subprocess(path: f"cd {data['out']}; 7z l out.7z", text: "1 files")

    def test_step4(self):
        # t: проверка целостности архива
        assert find_subprocess(f"cd {data['out']}/out; 7z t arx2.7z", 'Everything is Ok'), "test3 FAIL"

    def test_step5(self):
        # t: проверка целостности архива
        assert find_subprocess(f"cd {data['out']}/out; 7z d arx2.7z", 'Everything is Ok'), "test3 FAIL"

    def test_step6(self):
        # t: проверка целостности архива
        assert find_subprocess(f"cd {data['out']}/out; 7z u arx2.7z", 'Everything is Ok'), "test3 FAIL"


    def test_step 7(self, clear_folders, make_files):
        find_subprocess( path: f"cd {data['test']}; 7z a {data['out']}/arx2", text: "Everything is 0k")
        assert find_subprocess( path: f"cd {data['out']} && 7z xar x 2.7z -o{data['folder 1']}", text: 'Everything is Ok'), "test3 FAIL"

    def test_step 8(self):
        res1 = crc32(f"{data['out']}/arx2.7z").lower()
        assert find_subprocess( path: f"crc32 {data['out']}/arx2.7z", res 1), "test 8 FAIL"
